{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js\";\nimport React, { Component, Fragment } from 'react';\nimport { GIANT_BOMB } from '../constants';\nimport GameTiles from '../components/GameTiles';\nimport { Pagination, Grid, Segment, Icon } from 'semantic-ui-react';\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      games: [],\n      images: [],\n      search: '',\n      loading: false,\n      searched: false,\n      counter: 1,\n      tColumns: 0\n    };\n\n    this.addGame = event => {\n      let name = event.target.parentElement.children[2].innerText;\n      let image = event.target.parentElement.firstElementChild.src;\n      this.props.addToCart(name, image);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.checkEnter = e => {\n      let key = e.key;\n\n      if (key === 'Enter') {\n        let search = this.state.search;\n        this.handleFetch(search);\n      }\n    };\n\n    this.addTColumns = num => {\n      this.setState({\n        tColumns: num\n      });\n    };\n\n    this.handleFetch = search => {\n      this.setState({\n        loading: true,\n        searched: true\n      });\n      let terms;\n      typeof search === 'object' ? terms = this.state.search : terms = search;\n      this.setState({\n        games: [],\n        images: []\n      });\n      const proxyurl = `https://cors-anywhere.herokuapp.com/`;\n      const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms.toLowerCase()}&resources=game`;\n      fetch(proxyurl + url) // .then(res => res.json())\n      // .then(data => this.setState({gameData: data}))\n      .then(res => res.json()).then(data => {\n        let newGames = data.results.map(game => game.name);\n        let images = data.results.map(game => game.image.medium_url);\n        this.setState({\n          games: [...newGames],\n          images: [...images],\n          loading: false\n        });\n      });\n    };\n\n    this.scroll = target => {\n      let direction = target.className.includes('right') ? 0 : this.state.games.length - 1;\n      let newGames = this.state.games;\n      let gameToMove = newGames.splice(direction, 1)[0];\n      let newImages = this.state.images;\n      let imageToMove = newImages.splice(direction, 1)[0];\n      direction === 0 ? newGames.push(gameToMove) && newImages.push(imageToMove) : newGames.unshift(gameToMove) && newImages.unshift(imageToMove);\n      console.log(newGames);\n      let counter = direction === 0 ? 1 : -1 + this.state.counter;\n\n      if (counter < 1) {\n        counter = newGames.length;\n      } else if (counter > newGames.length) {\n        counter = 1;\n      }\n\n      this.setState({\n        games: newGames,\n        images: newImages,\n        counter: counter\n      });\n    };\n  }\n\n  render() {\n    let length;\n    this.state.games ? length = this.state.games.length : length = 0;\n    let searched = this.state.searched;\n    let counter = this.state.counter;\n    let lastNumber = counter + this.state.tColumns;\n\n    if (this.state.games && lastNumber > this.state.games.length) {\n      lastNumber -= this.state.games.length;\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: '3em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchbar\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.handleChange,\n      onKeyDown: this.checkEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      id: \"search\",\n      value: \"Search\",\n      onClick: this.handleFetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"gamesBanner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Icon, {\n      loading: true,\n      name: \"spinner\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, this.state.games.length > 0 ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, `results ${counter} - ${lastNumber} of ${this.state.games.length}`) : null, length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      className: \"scrollIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"angle double left\",\n      size: \"big\",\n      onClick: e => this.scroll(e.target),\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      columns: 2,\n      only: \"mobile\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 4,\n      only: \"computer\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 3,\n      only: \"tablet\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      addTColumns: this.addTColumns,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      className: \"scrollIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"angle double right\",\n      size: \"big\",\n      onClick: e => this.scroll(e.target),\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))), React.createElement(Pagination, {\n      defaultActivePage: 1,\n      firstItem: null,\n      lastItem: null,\n      pointing: true,\n      secondary: true,\n      totalPages: 3 // style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}}\n      ,\n      style: {\n        visibility: 'hidden'\n      },\n      id: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })) : null, length === 0 && searched && !this.state.loading ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"No Results Found\") : null));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js"],"names":["React","Component","Fragment","GIANT_BOMB","GameTiles","Pagination","Grid","Segment","Icon","Body","state","games","images","search","loading","searched","counter","tColumns","addGame","event","name","target","parentElement","children","innerText","image","firstElementChild","src","props","addToCart","handleChange","setState","value","checkEnter","e","key","handleFetch","addTColumns","num","terms","proxyurl","url","toLowerCase","fetch","then","res","json","data","newGames","results","map","game","medium_url","scroll","direction","className","includes","length","gameToMove","splice","newImages","imageToMove","push","unshift","console","log","render","lastNumber","marginBottom","visibility","alignItems","maxWidth","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { GIANT_BOMB } from '../constants'\nimport GameTiles from '../components/GameTiles'\nimport { Pagination, Grid, Segment, Icon } from 'semantic-ui-react'\n\nclass Body extends Component {\n  state = {\n    games: [],\n    images: [],\n    search: '',\n    loading: false,\n    searched: false,\n    counter: 1,\n    tColumns: 0\n  }\n\n  addGame = (event) => {\n    let name = event.target.parentElement.children[2].innerText\n    let image = event.target.parentElement.firstElementChild.src\n\n    this.props.addToCart(name, image)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  checkEnter = (e) => {\n    let key = e.key\n    if (key === 'Enter') {\n      let search = this.state.search\n      this.handleFetch(search)\n    }\n  }\n\n  addTColumns = (num) => {\n    this.setState({\n      tColumns: num\n    })\n  }\n\n  handleFetch = (search) => {\n    this.setState({loading: true, searched: true})\n    let terms\n    typeof(search) === 'object' ? terms = this.state.search\n    :\n    terms = search\n\n    this.setState({\n      games: [],\n      images: []\n    })\n\n    const proxyurl = `https://cors-anywhere.herokuapp.com/`\n    const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms.toLowerCase()}&resources=game`\n\n    fetch(proxyurl + url)\n    // .then(res => res.json())\n    // .then(data => this.setState({gameData: data}))\n    .then(res => res.json())\n    .then(data => {\n      let newGames = data.results.map(game => game.name)\n      let images = data.results.map(game => game.image.medium_url)\n\n      this.setState({\n        games: [...newGames],\n        images: [...images],\n        loading: false\n      })\n    })\n  }\n\n  scroll = (target) => {\n    let direction = target.className.includes('right') ? 0 : this.state.games.length-1\n\n    let newGames = this.state.games\n    let gameToMove = newGames.splice(direction, 1)[0]\n\n    let newImages = this.state.images\n    let imageToMove = newImages.splice(direction, 1)[0]\n\n    direction === 0 ? newGames.push(gameToMove) && newImages.push(imageToMove) :  newGames.unshift(gameToMove) && newImages.unshift(imageToMove)\n\n    console.log(newGames)\n\n    let counter = direction === 0 ? 1 : -1 + this.state.counter\n    if (counter < 1) {\n      counter = newGames.length\n    } else if (counter > newGames.length) {\n      counter = 1\n    }\n\n    this.setState({\n      games: newGames,\n      images: newImages,\n      counter: counter\n    })\n  }\n\n  render() {\n    let length\n    this.state.games ? length = this.state.games.length : length = 0\n    let searched = this.state.searched\n\n    let counter = this.state.counter\n    let lastNumber = counter+this.state.tColumns\n\n    if (this.state.games && lastNumber > this.state.games.length) {\n        lastNumber -= this.state.games.length\n    }\n\n    return (\n      <Fragment>\n        <div style={{marginBottom: '3em'}}>\n          <input type='text' id='searchbar' name='search' value={this.state.search} onChange={this.handleChange} onKeyDown={this.checkEnter} />\n          <input type='button' id='search' value='Search' onClick={this.handleFetch} />\n        </div>\n\n        <div id='gamesBanner'>\n          {\n            this.state.loading ?\n              <Icon loading name='spinner' size='big' /> : null\n          }\n          {\n            this.state.games.length > 0 ?\n              <p>{`results ${counter} - ${lastNumber} of ${this.state.games.length}`}</p>\n            :\n              null\n          }\n          {\n            length > 0 ? <Fragment>\n              <Grid style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible', alignItems: 'center',}}>\n\n                <button style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} className='scrollIcon'>\n                  <Icon name='angle double left' size='big'\n                    onClick={(e) => this.scroll(e.target)} style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} />\n                </button>\n\n                <Grid.Row columns={2} only='mobile' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                </Grid.Row>\n\n\n                <Grid.Row columns={4} only='computer' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={3} only='tablet' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} addTColumns={this.addTColumns} column={1} tColumns={2} />\n                    </Segment>\n\n                  </Grid.Column>\n                </Grid.Row>\n\n                <button style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} className='scrollIcon'>\n                  <Icon name='angle double right' size='big'\n                    onClick={(e) => this.scroll(e.target)}\n                    style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} />\n                </button>\n\n              </Grid>\n\n              <Pagination\n                defaultActivePage={1}\n                firstItem={null}\n                lastItem={null}\n                pointing\n                secondary\n                totalPages={3}\n                // style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}}\n                style={{visibility: 'hidden'}}\n                id='pagination'\n              />\n            </Fragment>\n            :\n            null\n          }\n          {\n            length === 0 && searched && !this.state.loading ?\n              <h2>No Results Found</h2>\n            :\n              null\n          }\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Body\n"]},"metadata":{},"sourceType":"module"}