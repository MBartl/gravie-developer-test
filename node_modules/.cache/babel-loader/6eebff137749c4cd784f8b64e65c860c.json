{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js\";\nimport React, { Component, Fragment } from 'react';\nimport { GIANT_BOMB } from '../constants';\nimport GameTiles from '../components/GameTiles';\nimport { Pagination, Grid, Segment } from 'semantic-ui-react';\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: ''\n    };\n\n    this.addGame = event => {\n      let name = event.target.parentElement.children[2].innerText;\n      let image = event.target.parentElement.firstElementChild.src;\n      this.props.addToCart(name, image);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.checkEnter = e => {\n      let key = e.key;\n\n      if (key === 'Enter') {\n        let search = this.state.search;\n        this.handleFetch(search);\n      }\n    };\n\n    this.handleFetch = search => {\n      let terms;\n      typeof search === 'object' ? terms = this.state.search : terms = search;\n      this.setState({\n        games: [],\n        images: []\n      });\n      const proxyurl = `https://cors-anywhere.herokuapp.com/`;\n      const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`;\n      fetch(proxyurl + url) // .then(res => res.json())\n      // .then(data => this.setState({gameData: data}))\n      .then(res => res.json()).then(data => {\n        let newGames = data.results.map(game => game.name);\n        let images = data.results.map(game => game.image.medium_url);\n        this.setState({\n          games: [...newGames],\n          images: [...images]\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: '3em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchbar\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.handleChange,\n      onKeyDown: this.checkEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      id: \"search\",\n      value: \"Search\",\n      onClick: this.handleFetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"gamesBanner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        visibility: !this.state.games ? 'hidden' : 'visible'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      only: \"mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 4,\n      only: \"computer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 3,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 4,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 3,\n      only: \"tablet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        maxHeight: '77.7%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 3,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))))), React.createElement(Pagination, {\n      defaultActivePage: 1,\n      firstItem: null,\n      lastItem: null,\n      pointing: true,\n      secondary: true,\n      totalPages: 3,\n      style: {\n        visibility: !this.state.games ? 'hidden' : 'visible'\n      },\n      id: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js"],"names":["React","Component","Fragment","GIANT_BOMB","GameTiles","Pagination","Grid","Segment","Body","state","search","addGame","event","name","target","parentElement","children","innerText","image","firstElementChild","src","props","addToCart","handleChange","setState","value","checkEnter","e","key","handleFetch","terms","games","images","proxyurl","url","fetch","then","res","json","data","newGames","results","map","game","medium_url","render","marginBottom","visibility","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { GIANT_BOMB } from '../constants'\nimport GameTiles from '../components/GameTiles'\nimport { Pagination, Grid, Segment } from 'semantic-ui-react'\n\nclass Body extends Component {\n  state = {\n    search: ''\n  }\n\n  addGame = (event) => {\n    let name = event.target.parentElement.children[2].innerText\n    let image = event.target.parentElement.firstElementChild.src\n\n    this.props.addToCart(name, image)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  checkEnter = (e) => {\n    let key = e.key\n    if (key === 'Enter') {\n      let search = this.state.search\n      this.handleFetch(search)\n    }\n  }\n\n  handleFetch = (search) => {\n    let terms\n    typeof(search) === 'object' ? terms = this.state.search\n    :\n    terms = search\n\n    this.setState({\n      games: [],\n      images: []\n    })\n\n    const proxyurl = `https://cors-anywhere.herokuapp.com/`\n    const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`\n\n    fetch(proxyurl + url)\n    // .then(res => res.json())\n    // .then(data => this.setState({gameData: data}))\n    .then(res => res.json())\n    .then(data => {\n      let newGames = data.results.map(game => game.name)\n      let images = data.results.map(game => game.image.medium_url)\n\n      this.setState({\n        games: [...newGames],\n        images: [...images]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div style={{marginBottom: '3em'}}>\n          <input type='text' id='searchbar' name='search' value={this.state.search} onChange={this.handleChange} onKeyDown={this.checkEnter} />\n          <input type='button' id='search' value='Search' onClick={this.handleFetch} />\n        </div>\n        <div id='gamesBanner'>\n          <Fragment>\n            <Grid style={{visibility: !this.state.games ? 'hidden' : 'visible'}}>\n              <Grid.Row columns={2} only='mobile'>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={2} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={2} />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row columns={4} only='computer'>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={4} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={4} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={3} tColumns={4} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={4} tColumns={4} />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row columns={3} only='tablet'>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={3} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={3} />\n                  </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                  <Segment style={{maxHeight: '77.7%'}}>\n                    <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={3} tColumns={3} />\n                  </Segment>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n            <Pagination\n              defaultActivePage={1}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              totalPages={3}\n              style={{visibility: !this.state.games ? 'hidden' : 'visible'}}\n              id='pagination'\n            />\n          </Fragment>\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Body\n"]},"metadata":{},"sourceType":"module"}