{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js\";\nimport React, { Component, Fragment } from 'react';\nimport { GIANT_BOMB } from '../constants';\nimport GameTile from '../components/GameTile';\nimport { Pagination } from 'semantic-ui-react';\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: ''\n    };\n\n    this.addGame = event => {\n      let name = event.target.parentElement.children[2].innerText;\n      let image = event.target.parentElement.firstElementChild.src;\n      this.props.addToCart(name, image);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.checkEnter = e => {\n      let key = e.key;\n\n      if (key === 'Enter') {\n        let search = this.state.search;\n        this.handleFetch(search);\n      }\n    };\n\n    this.handleFetch = search => {\n      let terms;\n      typeof search === \"object\" ? terms = this.state.search : terms = search;\n      this.setState({\n        games: [],\n        images: []\n      });\n      const proxyurl = `https://cors-anywhere.herokuapp.com/`;\n      const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`;\n      fetch(proxyurl + url) // .then(res => res.json())\n      // .then(data => this.setState({gameData: data}))\n      .then(res => res.json()).then(data => {\n        let newGames = data.results.map(game => game.name);\n        let images = data.results.map(game => game.image.medium_url);\n        this.setState({\n          games: [...newGames],\n          images: [...images]\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: '3em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchbar\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.handleChange,\n      onKeyDown: this.checkEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      id: \"search\",\n      value: \"Search\",\n      onClick: this.handleFetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"gamesBanner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.games ? this.state.games.map((g, i) => {\n      return React.createElement(GameTile, {\n        games: this.state.games,\n        images: this.state.images,\n        i: i,\n        key: i,\n        addGame: this.props.addGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }) : null, React.createElement(Pagination, {\n      defaultActivePage: 1,\n      firstItem: null,\n      lastItem: null,\n      pointing: true,\n      secondary: true,\n      totalPages: 3,\n      style: {\n        visible: !this.state.games ? hidden : visible\n      },\n      id: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js"],"names":["React","Component","Fragment","GIANT_BOMB","GameTile","Pagination","Body","state","search","addGame","event","name","target","parentElement","children","innerText","image","firstElementChild","src","props","addToCart","handleChange","setState","value","checkEnter","e","key","handleFetch","terms","games","images","proxyurl","url","fetch","then","res","json","data","newGames","results","map","game","medium_url","render","marginBottom","g","i","visible","hidden"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { GIANT_BOMB } from '../constants'\nimport GameTile from '../components/GameTile'\nimport { Pagination } from 'semantic-ui-react'\n\nclass Body extends Component {\n  state = {\n    search: ''\n  }\n\n  addGame = (event) => {\n    let name = event.target.parentElement.children[2].innerText\n    let image = event.target.parentElement.firstElementChild.src\n\n    this.props.addToCart(name, image)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  checkEnter = (e) => {\n    let key = e.key\n    if (key === 'Enter') {\n      let search = this.state.search\n      this.handleFetch(search)\n    }\n  }\n\n  handleFetch = (search) => {\n    let terms\n    typeof(search) === \"object\" ? terms = this.state.search\n    :\n    terms = search\n\n    this.setState({\n      games: [],\n      images: []\n    })\n\n    const proxyurl = `https://cors-anywhere.herokuapp.com/`\n    const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`\n\n    fetch(proxyurl + url)\n    // .then(res => res.json())\n    // .then(data => this.setState({gameData: data}))\n    .then(res => res.json())\n    .then(data => {\n      let newGames = data.results.map(game => game.name)\n      let images = data.results.map(game => game.image.medium_url)\n\n      this.setState({\n        games: [...newGames],\n        images: [...images]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div style={{marginBottom: '3em'}}>\n          <input type='text' id='searchbar' name=\"search\" value={this.state.search} onChange={this.handleChange} onKeyDown={this.checkEnter} />\n          <input type='button' id='search' value='Search' onClick={this.handleFetch} />\n        </div>\n        <div id='gamesBanner'>\n          <Fragment>\n            {\n              this.state.games ?\n                this.state.games.map((g, i) => {\n                  return <GameTile games={this.state.games} images={this.state.images} i={i} key={i} addGame={this.props.addGame} />\n                })\n              :\n              null\n            }\n            <Pagination\n              defaultActivePage={1}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              totalPages={3}\n              style={{visible: !this.state.games ? hidden : visible}}\n              id='pagination'\n\n            />\n          </Fragment>\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}