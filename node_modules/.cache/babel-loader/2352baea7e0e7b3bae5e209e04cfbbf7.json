{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js\";\nimport React, { Component, Fragment } from 'react';\nimport { GIANT_BOMB } from '../constants';\nimport GameTiles from '../components/GameTiles';\nimport { Pagination, Grid, Segment, Icon } from 'semantic-ui-react';\n\nclass Body extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      loading: false,\n      searched: false\n    };\n\n    this.addGame = event => {\n      let name = event.target.parentElement.children[2].innerText;\n      let image = event.target.parentElement.firstElementChild.src;\n      this.props.addToCart(name, image);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.checkEnter = e => {\n      let key = e.key;\n\n      if (key === 'Enter') {\n        let search = this.state.search;\n        this.handleFetch(search);\n      }\n    };\n\n    this.handleFetch = search => {\n      this.setState({\n        loading: true,\n        searched: true\n      });\n      let terms;\n      typeof search === 'object' ? terms = this.state.search : terms = search;\n      this.setState({\n        games: [],\n        images: []\n      });\n      const proxyurl = `https://cors-anywhere.herokuapp.com/`;\n      const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`;\n      fetch(proxyurl + url) // .then(res => res.json())\n      // .then(data => this.setState({gameData: data}))\n      .then(res => res.json()).then(data => {\n        let newGames = data.results.map(game => game.name);\n        let images = data.results.map(game => game.image.medium_url);\n        this.setState({\n          games: [...newGames],\n          images: [...images],\n          loading: false\n        });\n      });\n    };\n\n    this.scroll = target => {\n      let direction = target.className.includes('right') ? 1 : this.state.games - 1;\n      let newGames = this.state.games;\n      let gameToMove = newGames.splice(direction, 1)[0];\n      let destination;\n      direction === 'right' ? destination = this.state.games - 1 : destination = 1;\n      newGames.splice(gameToMove, destination, 1);\n      debugger;\n    };\n  }\n\n  render() {\n    let length;\n    this.state.games ? length = this.state.games.length : length = 0;\n    let searched = this.state.searched;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: '3em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchbar\",\n      name: \"search\",\n      value: this.state.search,\n      onChange: this.handleChange,\n      onKeyDown: this.checkEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      id: \"search\",\n      value: \"Search\",\n      onClick: this.handleFetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"gamesBanner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Icon, {\n      loading: true,\n      name: \"spinner\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null, length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      className: \"scrollIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"angle double left\",\n      size: \"big\",\n      onClick: this.scroll.bind(this),\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      columns: 2,\n      only: \"mobile\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 4,\n      only: \"computer\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 3,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 4,\n      tColumns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      columns: 3,\n      only: \"tablet\",\n      style: {\n        alignItems: 'center',\n        maxWidth: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 1,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 2,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        backgroundColor: '#282c34'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(GameTiles, {\n      games: this.state.games,\n      images: this.state.images,\n      addGame: this.props.addGame,\n      column: 3,\n      tColumns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      className: \"scrollIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"angle double right\",\n      size: \"big\",\n      onClick: e => this.scroll(e.target),\n      style: {\n        visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(Pagination, {\n      defaultActivePage: 1,\n      firstItem: null,\n      lastItem: null,\n      pointing: true,\n      secondary: true,\n      totalPages: 3 // style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}}\n      ,\n      style: {\n        visibility: 'hidden'\n      },\n      id: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })) : null, length === 0 && searched && !this.state.loading ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"No Results Found\") : null));\n  }\n\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/matt/Development/gravie-software-engineer-challenge/src/containers/Body.js"],"names":["React","Component","Fragment","GIANT_BOMB","GameTiles","Pagination","Grid","Segment","Icon","Body","state","search","loading","searched","addGame","event","name","target","parentElement","children","innerText","image","firstElementChild","src","props","addToCart","handleChange","setState","value","checkEnter","e","key","handleFetch","terms","games","images","proxyurl","url","fetch","then","res","json","data","newGames","results","map","game","medium_url","scroll","direction","className","includes","gameToMove","splice","destination","render","length","marginBottom","visibility","alignItems","bind","maxWidth","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { GIANT_BOMB } from '../constants'\nimport GameTiles from '../components/GameTiles'\nimport { Pagination, Grid, Segment, Icon } from 'semantic-ui-react'\n\nclass Body extends Component {\n  state = {\n    search: '',\n    loading: false,\n    searched: false\n  }\n\n  addGame = (event) => {\n    let name = event.target.parentElement.children[2].innerText\n    let image = event.target.parentElement.firstElementChild.src\n\n    this.props.addToCart(name, image)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  checkEnter = (e) => {\n    let key = e.key\n    if (key === 'Enter') {\n      let search = this.state.search\n      this.handleFetch(search)\n    }\n  }\n\n  handleFetch = (search) => {\n    this.setState({loading: true, searched: true})\n    let terms\n    typeof(search) === 'object' ? terms = this.state.search\n    :\n    terms = search\n\n    this.setState({\n      games: [],\n      images: []\n    })\n\n    const proxyurl = `https://cors-anywhere.herokuapp.com/`\n    const url = `https://www.giantbomb.com/api/search/?api_key=${GIANT_BOMB}&format=json&query=${terms}&resources=game`\n\n    fetch(proxyurl + url)\n    // .then(res => res.json())\n    // .then(data => this.setState({gameData: data}))\n    .then(res => res.json())\n    .then(data => {\n      let newGames = data.results.map(game => game.name)\n      let images = data.results.map(game => game.image.medium_url)\n\n      this.setState({\n        games: [...newGames],\n        images: [...images],\n        loading: false\n      })\n    })\n  }\n\n  scroll = (target) => {\n    let direction = target.className.includes('right') ? 1 : this.state.games-1\n\n    let newGames = this.state.games\n    let gameToMove = newGames.splice(direction, 1)[0]\n\n    let destination\n    direction === 'right' ? destination = this.state.games-1 : destination = 1\n\n    newGames.splice(gameToMove, destination, 1)\n\n    debugger\n  }\n\n  render() {\n    let length\n    this.state.games ? length = this.state.games.length : length = 0\n    let searched = this.state.searched\n\n    return (\n      <Fragment>\n        <div style={{marginBottom: '3em'}}>\n          <input type='text' id='searchbar' name='search' value={this.state.search} onChange={this.handleChange} onKeyDown={this.checkEnter} />\n          <input type='button' id='search' value='Search' onClick={this.handleFetch} />\n        </div>\n        <div id='gamesBanner'>\n          {\n            this.state.loading ?\n              <Icon loading name='spinner' size='big' /> : null\n          }\n          {\n            length > 0 ? <Fragment>\n              <Grid style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible', alignItems: 'center',}}>\n\n                <button style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} className='scrollIcon'>\n                  <Icon name='angle double left' size='big'\n                    onClick={this.scroll.bind(this)} style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} />\n                </button>\n\n                <Grid.Row columns={2} only='mobile' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={2} />\n                    </Segment>\n                  </Grid.Column>\n                </Grid.Row>\n\n\n                <Grid.Row columns={4} only='computer' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={4} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={4} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={3} tColumns={4} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={4} tColumns={4} />\n                    </Segment>\n\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={3} only='tablet' style={{alignItems: 'center', maxWidth: '80%'}}>\n                  <Grid.Column>\n\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={1} tColumns={3} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={2} tColumns={3} />\n                    </Segment>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Segment style={{backgroundColor: '#282c34'}}>\n                      <GameTiles games={this.state.games} images={this.state.images} addGame={this.props.addGame} column={3} tColumns={3} />\n                    </Segment>\n\n                  </Grid.Column>\n                </Grid.Row>\n\n                <button style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} className='scrollIcon'>\n                  <Icon name='angle double right' size='big'\n                    onClick={(e) => this.scroll(e.target)}\n                    style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}} />\n                </button>\n\n              </Grid>\n\n              <Pagination\n                defaultActivePage={1}\n                firstItem={null}\n                lastItem={null}\n                pointing\n                secondary\n                totalPages={3}\n                // style={{visibility: !this.state.games && length === 0 ? 'hidden' : 'visible'}}\n                style={{visibility: 'hidden'}}\n                id='pagination'\n              />\n            </Fragment>\n            :\n            null\n          }\n          {\n            length === 0 && searched && !this.state.loading ?\n              <h2>No Results Found</h2>\n            :\n              null\n          }\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Body\n"]},"metadata":{},"sourceType":"module"}