{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Development/gravie-software-engineer-challenge/src/components/GameTiles.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\n\nclass GameTiles extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleRent = e => {\n      if (this.props.displayCart === true) {\n        return;\n      } else {\n        let game = e.target.parentElement.lastElementChild.innerText;\n        let image = e.target.parentElement.parentElement.firstElementChild.src;\n        this.props.addGame(game, image);\n      }\n    };\n\n    this.handleRemove = e => {\n      let game = e.target.parentElement.lastElementChild.innerText;\n      let target = this.props.games.indexOf(game);\n      this.props.remove(target);\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.games ? React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.games ? this.props.games.map((game, i) => {\n      let alt = `cover art for ${this.props.games[i]}`;\n      return i + 1 === this.props.column && i <= this.props.tColumns ? React.createElement(Card, {\n        style: {\n          alignSelf: 'center'\n        },\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.images[i],\n        alt: alt,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"rentButton\",\n        onClick: this.props.displayCart === true ? this.handleRemove : this.handleRent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, !this.props.displayCart === true ? this.props.cart.includes(game) ? '✔' : 'Rent' : React.createElement(Icon, {\n        name: \"trash alternate\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), this.props.displayCart === true ? null : React.createElement(\"p\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"$4.99\"), React.createElement(\"h4\", {\n        className: \"gameTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, game))) : null;\n    }) : null) : null);\n  }\n\n}\n\nexport default GameTiles;","map":{"version":3,"sources":["/Users/matt/Development/gravie-software-engineer-challenge/src/components/GameTiles.js"],"names":["React","Component","Fragment","Card","Icon","GameTiles","state","loading","handleRent","e","props","displayCart","game","target","parentElement","lastElementChild","innerText","image","firstElementChild","src","addGame","handleRemove","games","indexOf","remove","render","map","i","alt","column","tColumns","alignSelf","images","width","textAlign","cart","includes"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { Card, Icon } from 'semantic-ui-react'\n\nclass GameTiles extends Component {\n  state = {\n    loading: false\n  }\n\n  handleRent = (e) => {\n    if (this.props.displayCart === true) {\n      return\n    }\n    else {\n      let game = e.target.parentElement.lastElementChild.innerText\n      let image = e.target.parentElement.parentElement.firstElementChild.src\n\n      this.props.addGame(game, image)\n    }\n  }\n\n  handleRemove = (e) => {\n    let game = e.target.parentElement.lastElementChild.innerText\n    let target = this.props.games.indexOf(game)\n\n    this.props.remove(target)\n  }\n\n  render() {\n    return (\n      <Fragment>\n        { this.props.games ? <Card.Group>\n          {this.props.games ? this.props.games.map((game, i) => {\n            let alt = `cover art for ${this.props.games[i]}`\n\n            return (i+1 === this.props.column && i <= this.props.tColumns) ? <Card style={{alignSelf: 'center'}} key={i}>\n              <img src={this.props.images[i]} alt={alt} style={{width: '100%'}}></img>\n              <div style={{textAlign: 'left'}}>\n\n                <button className='rentButton'\n                  onClick=\n                  {\n                    this.props.displayCart === true ?\n                      this.handleRemove\n                    :\n                      this.handleRent\n                  }>\n\n                  {\n                    !this.props.displayCart === true ?\n                      this.props.cart.includes(game) ? '✔' : 'Rent'\n                    :\n                    <Icon name='trash alternate' size='small'/>\n                  }\n                </button>\n                { this.props.displayCart === true ?\n                  null\n                :\n                <p className='price'>$4.99</p>\n                }\n\n                <h4 className='gameTitle'>{game}</h4>\n\n              </div>\n            </Card> : null\n          })\n          :\n            null\n          }\n        </Card.Group>\n        :\n          null\n        }\n      </Fragment>\n    );\n  }\n\n}\n\nexport default GameTiles\n"]},"metadata":{},"sourceType":"module"}